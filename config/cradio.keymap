/*
 * Copyright (c) 2020 The ZMK Contributors
 *
 * SPDX-License-Identifier: MIT
 */

#include <behaviors.dtsi>
#include <dt-bindings/zmk/keys.h>
#include <dt-bindings/zmk/bt.h>


&mt {
   flavor = "tap-preferred";
   tapping-term-ms = <500>;
};

/ { 

    combos {
        compatible = "zmk,combos";
        combo_esc {
            timeout-ms = <50>;
            key-positions = <0 1>;
            bindings = <&kp ESC>;
        };
	
	combo_left-option {
            timeout-ms = <50>;
            key-positions = <22 23>;
            bindings = <&kp LALT>;
        };
        
         combo_tab {
            timeout-ms = <50>;
            key-positions = <10 11>;
            bindings = <&kp TAB>;
        };
        
                    combo_left-control {
            timeout-ms = <50>;
            key-positions = <20 21>;
            bindings = <&kp LCTRL>;
        };
        
                           combo_layer3 {
            timeout-ms = <50>;
            key-positions = <3 4>;
            bindings = <&mo 3>;
        };
        
        
           	    combo_right-command {
            timeout-ms = <50>;
            key-positions = <16 17>;
            bindings = <&kp RCMD>;
        };
                       combo_layer3 {
            timeout-ms = <50>;
            key-positions = <5 15>;
            bindings = <&mo 3>;
        };   

        
    };
    
            ZMK_MACRO(scrnshot,
        wait-ms = <30>;
        tap-ms = <40>;
        bindings = <&kp LSHFT &kp LCMD &kp N4>;
    )

        keymap {
                compatible = "zmk,keymap";
                
       		default_layer {
		bindings = <
		&mt N1 Q &mt N2 W &mt N3 E &mt N4 R &mt N5 T 				&mt N6 Y &mt N7 U &mt N8 I &mt N9 O &mt N0 P 
		&kp A    &kp S    &kp D    &kp F    &mt LS(LG(N4)) G 			&kp H    &kp J    &kp K    &kp L    &kp APOS
		&mt LSFT Z &kp X  &kp C    &kp V    &mt LA(LG(ESC)) B		        &kp N    &kp M    &kp CMMA &kp DOT  &mt QMARK EXCL
          				&mo 1 &mt LSHFT BSPC 				&mt RSHFT SPC  &lt 2 RET
		>;
		};

       		left_layer {
		bindings = <
		&kp EXCL   &kp AT      &kp HASH     &kp DLLR   &kp PRCNT		&kp CARET  &kp AMPS  &kp ASTRK  &kp LPAR &kp RPAR 
		&kp PLUS   &kp MINUS   &kp ASTRK    &kp FSLH   &kp EQUAL 		&none      &kp N4    &kp N5     &kp N6   &kp MINUS 
		&kp DEL    &kp TILDE   &kp LBKT     &kp RBKT   &kp BSPC 	        &kp BSPC  &kp N1   &kp N2   &kp N3  &mt COLON SEMI 
					    &mo 1  &kp LSHFT  				   &mo 3 &mo 2 
		>;
		};
		
		right_layer {
		bindings = <&scrnshot>;
		bindings = <
		&none   &kp N7   &kp N8   &kp N9  &kp N0    			&none      &kp HOME  &kp UP    &kp END    &none
		&none   &kp N4   &kp N5   &kp N6     &none 			&none      &kp LEFT  &kp DOWN  &kp RIGHT  &none
		&none   &kp N1   &kp N2   &kp N3  &kp BSPC    		        &kp BSPC   &kp LEFT  &kp DOWN  &kp RIGHT  &none
					 &mo 3 &kp LSHFT  				   &kp SPC  &mo 2 
		>;
		};	
		
		tri_layer {
		bindings = <
		&bootloader  &kp F2        &kp F3        &kp F4       &kp F5 			&kp F6       &kp F7  &kp F8  &kp F9  &bootloader 
		&kp F10      &kp F11       &kp F12       &none        &none			&none        &none   &none   &none   &none
		&bt BT_CLR   &bt BT_SEL 0  &bt BT_SEL 1  &bt BT_SEL 2 &bt BT_SEL 3   		&bt BT_SEL 4  &none  &none   &none   &reset   
					                   &none   &none  		            &none &none 
		>;
		};	
        
	};
};
